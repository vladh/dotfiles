# WirePlumber daemon context configuration #

context.properties = {
  ## Properties to configure the PipeWire context and some modules

  application.name = "WirePlumber Policy"
  log.level = 2
  wireplumber.script-engine = lua-scripting
  wireplumber.export-core = false

  #mem.mlock-all = false
  #support.dbus  = true
}

context.spa-libs = {
  #<factory-name regex> = <library-name>
  #
  # Used to find spa factory names. It maps an spa factory name
  # regular expression to a library name that should contain
  # that factory.
  #
  audio.convert.* = audioconvert/libspa-audioconvert
  support.*       = support/libspa-support
}

context.modules = [
  #{   name = <module-name>
  #    [ args = { <key> = <value> ... } ]
  #    [ flags = [ [ ifexists ] [ nofail ] ]
  #}
  #
  # PipeWire modules to load.
  # If ifexists is given, the module is ignored when it is not found.
  # If nofail is given, module initialization failures are ignored.
  #

  # The native communication protocol.
  { name = libpipewire-module-protocol-native }

  # Allows creating nodes that run in the context of the
  # client. Is used by all clients that want to provide
  # data to PipeWire.
  { name = libpipewire-module-client-node }

  # Allows creating devices that run in the context of the
  # client. Is used by the session manager.
  { name = libpipewire-module-client-device }

  # Makes a factory for wrapping nodes in an adapter with a
  # converter and resampler.
  { name = libpipewire-module-adapter }

  # Allows applications to create metadata objects. It creates
  # a factory for Metadata objects.
  { name = libpipewire-module-metadata }

  # Provides factories to make session manager objects.
  { name = libpipewire-module-session-manager }
]

wireplumber.components = [
  #{ name = <component-name>, type = <component-type> }
  #
  # WirePlumber components to load
  #

  # The lua scripting engine
  { name = libwireplumber-module-lua-scripting, type = module }

  # The lua configuration file
  # Other components are loaded from there
  { name = policy.lua, type = config/lua }
]
